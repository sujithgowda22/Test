---

- hosts: localhost
  connection: local
  remote_user: root

  vars:
   keypairname: myrakey
   region: "{{ region }}"
   image: ami-0dde2e6d
   instancetype: "{{ instancetype }}"

  tasks:
  
  - name: Creating security group
    ec2_group:
      name: "myra_security_group"
      description: "Security group for HIRO"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ ec2_region }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
          
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
                
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
    register: ec2_security

  - name: Creating an EC2 Key
    ec2_key:
      name: "myrakey"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ ec2_region }}"
      state: present
    register: ec2_key
    
    - name: Creating ec2 instance meter
      ec2:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        key_name: "hirokey"
        group: "hiro_security_group"
        instance_type: "{{ ec2_instance_type }}"
        image: "{{ ec2_ami }}"
        vpc_subnet_id: "{{ ec2_subnet_id }}"
        region: "{{ ec2_region }}"
        instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
        assign_public_ip: yes
        wait: true
        count: 1
        volumes:
        - device_name: /dev/sda1
          volume_size: "{{ ec2_volume_size }}"
          delete_on_termination: true
          
      register: ec2_info


    - name: Wait for ssh to o come up
      wait_for: host="{{ item.public_ip }}" port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances
     
      register: ssh

    - name: Add instances to host group
      add_host: hostname={{ ssh.results[0].item.public_ip }} groupname=launched
      with_dict: ssh

    - name: Add hosts to jolota hosts file
      local_action: lineinfile
                    dest="/home/myra/ansible/inventory"
                    regexp={{ item.public_dns_name }}
                    insertafter="[ec2hosts]" line={{ item.public_dns_name }}
      with_items: ec2.instances
 
    - name: Add instances to host group
      set_fact:
        hostnam={{ item.public_dns_name }}
        hostip={{ item.public_ip }}
      with_items: ec2.instances

      register: fact

        
 hosts: launched 
  remote_user: ubuntu
  become: Yes
  become_method: sudo
  become_user: root

  tasks:

    - name: Installs nginx web server
      apt: pkg=nginx state=installed update_cache=true
      notify:
        - start nginx

  handlers:
    - name: start nginx
      service: name=nginx state=started
    
